name: Download All Models (Combined)

on:
  workflow_dispatch:
    inputs:
      force_download:
        description: 'Force re-download even if files exist'
        required: false
        default: false
        type: boolean
      projects:
        description: 'Which projects to download models for'
        required: false
        default: 'both'
        type: choice
        options:
        - both
        - mannequin-segmenter
        - garment-measuring-hpe

jobs:
  download-mannequin-models:
    if: ${{ github.event.inputs.projects == 'both' || github.event.inputs.projects == 'mannequin-segmenter' }}
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install google-cloud-storage google-auth
        
    - name: Download mannequin segmenter model
      env:
        GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
        BUCKET_NAME_ARTIFACTS: ${{ secrets.BUCKET_NAME_ARTIFACTS }}
        FORCE_DOWNLOAD: ${{ github.event.inputs.force_download }}
      working-directory: mannequin-segmenter
      run: |
        if [ "$FORCE_DOWNLOAD" = "true" ]; then
          rm -f artifacts/20250703_190222/checkpoint.pt
        fi
        python download_model.py
        
    - name: Verify mannequin model
      working-directory: mannequin-segmenter
      run: |
        if [ -f "artifacts/20250703_190222/checkpoint.pt" ]; then
          echo "✅ Mannequin segmenter model downloaded successfully"
          ls -lh artifacts/20250703_190222/checkpoint.pt
        else
          echo "❌ Mannequin segmenter model not found"
          exit 1
        fi

  download-hpe-models:
    if: ${{ github.event.inputs.projects == 'both' || github.event.inputs.projects == 'garment-measuring-hpe' }}
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install google-cloud-storage google-auth
        
    - name: Download HPE models
      env:
        GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
        BUCKET_NAME_ARTIFACTS: ${{ secrets.BUCKET_NAME_ARTIFACTS }}
        FORCE_DOWNLOAD: ${{ github.event.inputs.force_download }}
      working-directory: garment-measuring-hpe
      run: |
        if [ "$FORCE_DOWNLOAD" = "true" ]; then
          rm -f artifacts/pose_hrnet-w48_384x288-deepfashion2_mAP_0.7017.pth
          rm -f artifacts/bbox_result_val.pkl
        fi
        python download_models.py
        
    - name: Verify HPE models
      working-directory: garment-measuring-hpe
      run: |
        echo "=== Verifying HPE model files ==="
        
        if [ -f "artifacts/pose_hrnet-w48_384x288-deepfashion2_mAP_0.7017.pth" ]; then
          echo "✅ HRNet pose model downloaded successfully"
          ls -lh artifacts/pose_hrnet-w48_384x288-deepfashion2_mAP_0.7017.pth
        else
          echo "❌ HRNet pose model not found"
          exit 1
        fi
        
        if [ -f "artifacts/bbox_result_val.pkl" ]; then
          echo "✅ Bbox result file downloaded successfully"
          ls -lh artifacts/bbox_result_val.pkl
        else
          echo "❌ Bbox result file not found"
          exit 1
        fi

  summary:
    needs: [download-mannequin-models, download-hpe-models]
    if: always()
    runs-on: ubuntu-latest
    
    steps:
    - name: Download Summary
      run: |
        echo "## 📥 Model Download Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ needs.download-mannequin-models.result }}" = "success" ]; then
          echo "✅ **Mannequin Segmenter**: Models downloaded successfully" >> $GITHUB_STEP_SUMMARY
        elif [ "${{ needs.download-mannequin-models.result }}" = "skipped" ]; then
          echo "⏭️ **Mannequin Segmenter**: Skipped" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **Mannequin Segmenter**: Download failed" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ "${{ needs.download-hpe-models.result }}" = "success" ]; then
          echo "✅ **Garment Measuring HPE**: Models downloaded successfully" >> $GITHUB_STEP_SUMMARY
        elif [ "${{ needs.download-hpe-models.result }}" = "skipped" ]; then
          echo "⏭️ **Garment Measuring HPE**: Skipped" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **Garment Measuring HPE**: Download failed" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔧 Configuration Used:" >> $GITHUB_STEP_SUMMARY
        echo "- **Force Download**: ${{ github.event.inputs.force_download }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Projects**: ${{ github.event.inputs.projects }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Bucket**: ${{ secrets.BUCKET_NAME_ARTIFACTS }}" >> $GITHUB_STEP_SUMMARY 