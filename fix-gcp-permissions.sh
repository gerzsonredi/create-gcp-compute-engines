#!/bin/bash

# üö® GCP ARTIFACT REGISTRY PERMISSION FIX SCRIPT
# Futtatsd ezt a GCP Cloud Shell-ben vagy lok√°lisan gcloud CLI-vel

set -e

echo "üö® GCP ARTIFACT REGISTRY JOGOSULTS√ÅG JAV√çT√ÅS"
echo "============================================="

# V√°ltoz√≥k
PROJECT_ID="${GCP_PROJECT_ID:-$(gcloud config get-value project)}"
SERVICE_ACCOUNT_EMAIL="hpe-78@${PROJECT_ID}.iam.gserviceaccount.com"
REGION="europe-west4"
REPOSITORY_NAME="garment-measuring-repo"

echo "üìã Konfigur√°ci√≥:"
echo "  Project ID: $PROJECT_ID"
echo "  Service Account: $SERVICE_ACCOUNT_EMAIL"
echo "  Repository: $REPOSITORY_NAME"
echo "  Region: $REGION"
echo

# 1Ô∏è‚É£ ELLEN≈êRIZD A SERVICE ACCOUNT L√âTEZ√âS√âT
echo "1Ô∏è‚É£ Service Account ellen≈ërz√©se..."
if gcloud iam service-accounts describe "$SERVICE_ACCOUNT_EMAIL" --project="$PROJECT_ID" >/dev/null 2>&1; then
    echo "‚úÖ Service Account l√©tezik: $SERVICE_ACCOUNT_EMAIL"
else
    echo "‚ùå Service Account nem l√©tezik: $SERVICE_ACCOUNT_EMAIL"
    echo "üîß L√©trehoz√°s:"
    gcloud iam service-accounts create hpe-78 \
        --display-name="GitHub Actions HPE Deployer" \
        --description="Service account for GitHub Actions deployment" \
        --project="$PROJECT_ID"
    echo "‚úÖ Service Account l√©trehozva!"
fi

# 2Ô∏è‚É£ ARTIFACT REGISTRY API ENGED√âLYEZ√âSE
echo "2Ô∏è‚É£ Artifact Registry API enged√©lyez√©se..."
gcloud services enable artifactregistry.googleapis.com --project="$PROJECT_ID"
echo "‚úÖ API enged√©lyezve"

# 3Ô∏è‚É£ IAM SZEREPK√ñR√ñK HOZZ√ÅAD√ÅSA
echo "3Ô∏è‚É£ IAM szerepk√∂r√∂k hozz√°ad√°sa..."

# F≈ë szerepk√∂r√∂k
ROLES=(
    "roles/artifactregistry.admin"
    "roles/artifactregistry.createOnPushWriter" 
    "roles/artifactregistry.reader"
    "roles/run.admin"
    "roles/iam.serviceAccountUser"
    "roles/storage.admin"
    "roles/logging.logWriter"
)

for role in "${ROLES[@]}"; do
    echo "  Hozz√°ad√°s: $role"
    gcloud projects add-iam-policy-binding "$PROJECT_ID" \
        --member="serviceAccount:$SERVICE_ACCOUNT_EMAIL" \
        --role="$role" \
        --quiet
done

echo "‚úÖ IAM szerepk√∂r√∂k hozz√°adva"

# 4Ô∏è‚É£ ARTIFACT REGISTRY REPOSITORY L√âTREHOZ√ÅSA
echo "4Ô∏è‚É£ Artifact Registry repository l√©trehoz√°sa..."
if gcloud artifacts repositories describe "$REPOSITORY_NAME" \
    --location="$REGION" \
    --project="$PROJECT_ID" >/dev/null 2>&1; then
    echo "‚úÖ Repository m√°r l√©tezik: $REPOSITORY_NAME"
else
    echo "üì¶ Repository l√©trehoz√°sa..."
    gcloud artifacts repositories create "$REPOSITORY_NAME" \
        --repository-format=docker \
        --location="$REGION" \
        --description="Docker repository for garment measuring API" \
        --project="$PROJECT_ID"
    echo "‚úÖ Repository l√©trehozva: $REPOSITORY_NAME"
fi

# 5Ô∏è‚É£ JOGOSULTS√ÅGOK ELLEN≈êRZ√âSE
echo "5Ô∏è‚É£ Jogosults√°gok ellen≈ërz√©se..."
echo "Service Account szerepk√∂rei:"
gcloud projects get-iam-policy "$PROJECT_ID" \
    --flatten="bindings[].members" \
    --format="table(bindings.role)" \
    --filter="bindings.members:serviceAccount:$SERVICE_ACCOUNT_EMAIL"

echo
echo "Artifact Registry repositories:"
gcloud artifacts repositories list --location="$REGION" --project="$PROJECT_ID"

# 6Ô∏è‚É£ TESZTEL√âS
echo "6Ô∏è‚É£ Jogosults√°g tesztel√©s..."
echo "Artifact Registry hozz√°f√©r√©s teszt:"
if gcloud artifacts repositories describe "$REPOSITORY_NAME" \
    --location="$REGION" \
    --project="$PROJECT_ID" >/dev/null 2>&1; then
    echo "‚úÖ Sikeres hozz√°f√©r√©s az Artifact Registry repository-hoz!"
else
    echo "‚ùå Tov√°bbra is hozz√°f√©r√©si hiba"
fi

echo
echo "üéØ BEFEJEZ√âS"
echo "=========="
echo "‚úÖ Service Account konfigur√°lva: $SERVICE_ACCOUNT_EMAIL"
echo "‚úÖ Artifact Registry repository: $REPOSITORY_NAME"
echo "‚úÖ IAM szerepk√∂r√∂k hozz√°adva"
echo
echo "üîß Ha tov√°bbra is probl√©m√°k vannak:"
echo "1. Ellen≈ërizd a szervezeti h√°zirendeket (Organization Policies)"
echo "2. Gy≈ëz≈ëdj meg r√≥la, hogy projekt tulajdonos vagy"
echo "3. Pr√≥b√°ld √∫jra a GitHub Actions workflow-t"
echo
echo "üìß Service Account JSON key √∫jragener√°l√°sa:"
echo "gcloud iam service-accounts keys create sa-key-new.json --iam-account=$SERVICE_ACCOUNT_EMAIL --project=$PROJECT_ID" 