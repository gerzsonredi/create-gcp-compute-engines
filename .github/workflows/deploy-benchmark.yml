name: "üöÄ GCP Multi-Instance Deployment"

on:
  workflow_dispatch:
    inputs:
      config_file:
        description: "Path to config file"
        default: "example-configs/small-deployment.conf"
        required: true
      image_uri:
        description: "Container image URI for mannequin service"
        required: true
      project_id:
        description: "GCP Project ID (overrides config)"
        required: false
      zone:
        description: "GCP Zone (overrides config)"
        required: false

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up gcloud auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          install_components: 'gcloud'

      - name: Show gcloud info
        run: |
          gcloud --version
          gcloud auth list
          gcloud config list

      - name: Configure project (optional overrides)
        run: |
          if [ -n "${{ inputs.project_id }}" ]; then
            echo "Setting gcloud project to ${{ inputs.project_id }}"
            gcloud config set project "${{ inputs.project_id }}"
          fi

      - name: Make scripts executable
        run: |
          if [ -f create-gcp-compute-engines/deploy-gcp.sh ]; then chmod +x create-gcp-compute-engines/deploy-gcp.sh; fi
          if [ -f create-gcp-compute-engines/startup-script-mannequin.sh ]; then chmod +x create-gcp-compute-engines/startup-script-mannequin.sh; fi
          if [ -f startup-script-mannequin.sh ]; then chmod +x startup-script-mannequin.sh; fi

      - name: Deploy instances
        env:
          IMAGE_URI: ${{ inputs.image_uri }}
          PROJECT_ID: ${{ inputs.project_id }}
          ZONE: ${{ inputs.zone }}
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
        run: |
          # Set CONFIG_FILE to absolute path from repo root
          CONFIG_FILE_PATH="${{ inputs.config_file }}"
          if [ -f "$CONFIG_FILE_PATH" ]; then
            export CONFIG_FILE="$(pwd)/$CONFIG_FILE_PATH"
          elif [ -f "create-gcp-compute-engines/$CONFIG_FILE_PATH" ]; then
            export CONFIG_FILE="$(pwd)/create-gcp-compute-engines/$CONFIG_FILE_PATH"
          else
            echo "‚ùå Config f√°jl nem tal√°lhat√≥: $CONFIG_FILE_PATH"
            echo "El√©rhet≈ë f√°jlok:"
            find . -name "*.conf" -type f
            exit 1
          fi
          
          echo "üîß Config f√°jl: $CONFIG_FILE"
          
          if [ -f create-gcp-compute-engines/deploy-gcp.sh ]; then
            cd create-gcp-compute-engines
            ./deploy-gcp.sh
          else
            ./deploy-gcp.sh
          fi

      - name: List created instances
        run: |
          gcloud compute instances list --format='table(name,zone,status,tags.list())'


